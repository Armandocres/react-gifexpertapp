{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","GiftExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","htmlFor","type","value","onChange","target","id","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","title","images","downsized_medium","useFecthGifs","loading","state","setState","useEffect","then","imgs","setTimeout","GifGridItem","className","src","alt","GifGrid","key","initialState","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oMAoCeA,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAErB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,uBAAMC,SATW,SAACC,GACpBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAKd,UACE,uBAAOO,QAAQ,OAAf,2BACA,uBACEC,KAAK,OACLC,MAAQV,EACRW,SAlBkB,SAACR,GACzBF,EAAeE,EAAES,OAAOF,QAkBlBG,GAAG,a,8BCVEC,EAhBF,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACRC,EADQ,iDACyCC,UAAUH,GADnD,8DAESI,MAAOF,GAFhB,cAERG,EAFQ,gBAGSA,EAASC,OAHlB,uBAGNC,EAHM,EAGNA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLZ,GAAIY,EAAIZ,GACRa,MAAOD,EAAIC,MACXT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,iBAAiBX,QATxB,kBAaPM,GAbO,4CAAH,sDCyBEM,EAtBM,SAAEd,GAErB,MAA0BhB,mBAAS,CACjCuB,KAAM,GACNQ,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WACRnB,EAASC,GACNmB,MAAM,SAAAC,GACLC,YAAW,WACTJ,EAAS,CACPV,KAAMa,EACNL,SAAS,MAEV,WAEN,CAACf,IAEGgB,GCTMM,EAXK,SAAC,GAAyB,EAAtBxB,GAAuB,IAAnBa,EAAkB,EAAlBA,MAAOT,EAAW,EAAXA,IACjC,OACE,sBAAKqB,UAAU,yBAAf,UACE,wBAAQA,UAAU,cAAlB,SACE,qBAAKC,IAAMtB,EAAMuB,IAAMd,MAEzB,4BAAKA,QCeIe,EAnBC,SAAC,GAAkB,IAAhB1B,EAAe,EAAfA,SAEjB,EAAkCc,EAAcd,GAAlCY,EAAd,EAAQL,KAAcQ,EAAtB,EAAsBA,QAEtB,OACE,qCACE,mCAAOf,EAAP,OACEe,GAAW,mBAAGQ,UAAU,mCAAb,sBACb,qBAAKA,UAAU,YAAf,SAEIX,EAAOH,KAAI,SAACC,GACV,OAAO,wBAAC,EAAD,2BAAkBA,GAAlB,IAAwBiB,IAAMjB,EAAIZ,eCX/C8B,EAAe,CAAC,aAoBPC,EAlBO,WAEpB,MAAoC7C,mBAAS4C,GAA7C,mBAAOE,EAAP,KAAmB/C,EAAnB,KAEA,OACE,qCACE,+CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BACI+C,EAAWrB,KAAK,SAAAT,GAAQ,OACxB,cAAC,EAAD,CAASA,SAAUA,GAAeA,Y,MCZ5C+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.71cd46bf.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n  const [inputValue, setinputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setinputValue( e.target.value );\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if ( inputValue.trim().length > 2 ) {\r\n      setCategories(cats => [ inputValue, ...cats ]);\r\n      setinputValue('');\r\n    }\r\n  };\r\n\r\n  return (\r\n      <form onSubmit={ handleSubmit }>\r\n        <label htmlFor=\"gift\">Busca un gift</label>\r\n        <input\r\n          type=\"text\"\r\n          value={ inputValue }\r\n          onChange={ handleInputChange }\r\n          id='gift'\r\n        />\r\n      </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","const getGifs = async ( category ) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=5&api_key=rrg6rTyxsRu7ReLXoe5Cg9DxsfxlOxQ5`;\r\n  const response = await fetch( url );\r\n  const { data } = await response.json();\r\n\r\n  const gifs = data.map( img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  });\r\n\r\n  return gifs;\r\n}\r\n\r\nexport default getGifs;","import { useState, useEffect } from \"react\";\r\nimport getGifs from \"../helpers/getGifs\";\r\n\r\nconst useFecthGifs = ( category ) => {\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs( category )\r\n      .then( imgs => {\r\n        setTimeout(() => {\r\n          setState({\r\n            data: imgs,\r\n            loading: false\r\n          });\r\n        }, 1200)\r\n      });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useFecthGifs;","import React from 'react'\r\n\r\nconst GifGridItem = ( { id, title, url } ) => {\r\n  return (\r\n    <div className='card animate__bounceIn'>\r\n      <figure className='card__image'>\r\n        <img src={ url } alt={ title } />\r\n      </figure>\r\n      <p>{ title }</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifGridItem;\r\n","import React from 'react'\r\nimport useFecthGifs from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n  const { data: images, loading } = useFecthGifs( category );\r\n\r\n  return (\r\n    <>\r\n      <h3> { category } </h3>\r\n      { loading && <p className='animate__animated animate__flash' >Cargando</p> }\r\n      <div className='card-grid'>\r\n        {\r\n          images.map((img) => {\r\n            return <GifGridItem { ...img } key={ img.id }/>\r\n          })\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifGrid;\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst initialState = ['One Punch'];\r\n\r\nconst GiftExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(initialState);\r\n\r\n  return (\r\n    <>\r\n      <h1>GiftExpertApp</h1>\r\n      <AddCategory setCategories={ setCategories } />\r\n      <hr />\r\n      <ol>\r\n        { categories.map( category =>\r\n          <GifGrid category={category} key={category} />\r\n          ) }\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GiftExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}